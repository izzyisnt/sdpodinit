#!/usr/bin/env bash
set -euo pipefail
echo "🧩 Starting parallel SurfDock environment install..."

export PIP_DISABLE_PIP_VERSION_CHECK=1
export PYTHONWARNINGS="ignore"

echo "📦 Installing and configuring locale..."

# Install locale support
apt-get update
apt-get install -y locales

# Generate en_US.UTF-8 locale
locale-gen en_US.UTF-8

# Persist locale settings system-wide
update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8

# Apply locale immediately for current session
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

# Confirm
echo "✅ Locale configured:"
locale


if [ -d "SurfDock/.git" ]; then
    echo "📁 SurfDock already cloned, pulling latest changes..."
    cd SurfDock && git pull && cd ..
else
    echo "📦 Cloning SurfDock..."
    git clone https://github.com/CAODH/SurfDock.git
fi


# misc
pip install ipython



# ───── System Dependencies ───────────────────────────────────────────────
echo "📦 Installing system packages..."
apt-get update
apt-get install -y \
  python3.10-dev \
  swig \
  build-essential \
  git \
  openbabel

# ───── Core Scientific Stack ─────────────────────────────────────────────
install_core_sci() {
  echo "📦 Installing core scientific Python packages..."
  pip install \
    numpy==1.24.4 \
    scipy==1.8.1 \
    pandas==2.1.2 \
    scikit-learn==1.3.2
}

# ───── Chemistry & Docking Stack ────────────────────────────────────────
install_chem_stack() {
  echo "🧪 Installing docking and chemistry libraries..."
  pip install \
    rdkit-pypi==2022.9.5 \
    openmm==8.2.0 \
    biopython==1.79 \
    babel==2.13.1 \
    biopandas==0.4.1


  pip install git+https://github.com/openmm/openmmforcefields.git
  pip install git+https://github.com/openforcefield/openff-units.git@0.1.3
  pip install git+https://github.com/openforcefield/openff-toolkit.git@0.15.2
  pip install git+https://github.com/prody/ProDy.git
  pip install git+https://github.com/openmm/pdbfixer.git@master
  pip install MDAnalysis==2.5.0  # or a recent stable version
  pip install spyrmsd


}

# ───── ML Utilities ─────────────────────────────────────────────────────
install_ml_utils() {
  echo "🧠 Installing ML utilities..."
  pip install \
    torchmetrics==1.2.1 \
    torch-ema==0.3 \
    accelerate==0.15.0 \
    wandb==0.16.1
}

# ───── PyTorch Geometric ────────────────────────────────────────────────
install_pyg() {
  echo "🔗 Installing PyTorch Geometric packages..."
  pip install \
    e3nn==0.5.1 \
    pyg_lib \
    torch_scatter \
    torch_sparse \
    torch_cluster \
    torch_spline_conv \
    --find-links https://data.pyg.org/whl/torch-2.5.1+cu121.html
  pip install torch-geometric -f https://data.pyg.org/whl/torch-2.5.0+cu121.html
}

# ───── Mesh / Geometry Tools ────────────────────────────────────────────
install_mesh_tools() {
  echo "📐 Installing mesh and geometry tools..."
  pip install \
    trimesh \
    pymeshfix \
    plyfile
  pip install https://github.com/nuvolos-cloud/PyMesh/releases/download/v0.3.1/pymesh2-0.3.1-cp310-cp310-linux_x86_64.whl
}

# ───── Utility + NLP Packages ───────────────────────────────────────────
install_utils() {
  echo "🛠️  Installing utility and NLP packages..."
  pip install \
    loguru \
    prefetch_generator \
    dimorphite_dl \
    huggingface-hub==0.17.3 \
    tokenizers==0.13.3 \
    transformers==4.29.2
}

# ───── ESM Model (Optional) ─────────────────────────────────────────────
install_esm() {
  echo "🧬 Installing ESM model..."
  pip install git+https://github.com/facebookresearch/esm.git
}

# ───── Run All Groups in Parallel ───────────────────────────────────────
install_core_sci &
PID1=$!
install_chem_stack &
PID2=$!
install_ml_utils &
PID3=$!
install_pyg &
PID4=$!
install_mesh_tools &
PID5=$!
install_utils &
PID6=$!
install_esm &
PID7=$!

# Wait for all parallel jobs to finish
wait $PID1 $PID2 $PID3 $PID4 $PID5 $PID6 $PID7

echo "✅ All parallel install groups completed successfully!"

